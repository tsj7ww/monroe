# General
PROJECT_NAME="monroe"
PROJECT_DESCRIPTION="Monroe is a platform for data science and machine learning, providing tools for data management, analysis, and visualization."
PROJECT_VERSION="0.1.0"

# Environment
ENVIRONMENT="monroe"

# Python
PYTHONUNBUFFERED=1

# Backend
API_PORT=8000
API_HOST=http://localhost
# API_HOST=https://monroe.example.com
API_URL=${API_HOST}:${API_PORT}

# Frontend
FRONTEND_PORT=3000
FRONTEND_HOST=http://localhost
# FRONTEND_HOST=https://monroe.example.com
FRONTEND_URL = ${FRONTEND_HOST}:${FRONTEND_PORT}

# Databases

# MongoDB
MONGODB_HOST=monroe-mongo
MONGODB_PORT=27017
MONGO_PORT=${MONGODB_PORT}
MONGODB_USER=monroe
MONGODB_PASSWORD=monroe
MONGODB_DATABASE=monroe
# Simplified connection strings
MONGODB_CONNECTION_STRING=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_HOST}:${MONGODB_PORT}/?authSource=admin
MONGODB_SQLALCHEMY_URI=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_HOST}:${MONGODB_PORT}/monroe
MONGODB_PYMONGO_URI=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_HOST}:${MONGODB_PORT}/monroe?authSource=admin
# MONGODB_ADMIN_USER=admin
# MONGODB_ADMIN_PASSWORD=admin
# MONGODB_AUTH_SOURCE=admin
# MONGODB_REPLICA_SET_NAME=monroe-replica-set
# MONGODB_REPLICA_SET_MEMBERS=mongodb1:27017,mongodb2:27018,mongodb3:27019
# MONGODB_REPLICA_SET_CONNECTION_STRING=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_REPLICA_SET_MEMBERS}/?replicaSet=${MONGODB_REPLICA_SET_NAME}&authSource=${MONGODB_AUTH_SOURCE}&readPreference=primary&appname=MongoDB%20Compass&ssl=false

# MinIO
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin
MINIO_HOST=minio
MINIO_PORT=9000
MINIO_CONSOLE_PORT=9001
MINIO_SECURE=false
# MinIO connection string
MINIO_CONNECTION_STRING=http://${MINIO_ROOT_USER}:${MINIO_ROOT_PASSWORD}@${MINIO_HOST}:${MINIO_PORT}
# MinIO bucket
MINIO_BUCKET=monroe-bucket
# MinIO bucket policy
MINIO_BUCKET_POLICY=public-read
# MinIO access key
MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
# MinIO secret key
MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}

# PostgreSQL
POSTGRES_DB=monroe
POSTGRES_USER=monroe
POSTGRES_PASSWORD=monroe
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
# PostgreSQL connection string
POSTGRES_CONNECTION_STRING=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
# PostgreSQL connection string for SQLAlchemy
SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# Redis
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=monroe
# Redis connection string
REDIS_CONNECTION_STRING=redis://${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0

# Jupyter
# Generate token: openssl rand -hex 32
JUPYTER_TOKEN=""
# Generate password: python -c "from jupyter_server.auth import passwd; print(passwd('your_password'))"
JUPYTER_PASSWORD=""
JUPYTER_PORT=8888
JUPYTER_ALLOW_ORIGIN=*
JUPYTER_BASE_URL=/
JUPYTER_MEMORY_LIMIT=8G
JUPYTER_ENABLE_LAB=yes
JUPYTER_ALLOW_ROOT=yes

# Dask 
DASK_SCHEDULER_PORT=8786
DASK_DASHBOARD_PORT=8787
DASK_SCHEDULER_HOST=dask-scheduler
DASK_SCHEDULER_ADDRESS=tcp://${DASK_SCHEDULER_HOST}:${DASK_SCHEDULER_PORT}
DASK_DISTRIBUTED__WORKER__MEMORY__LIMIT=4GB
DASK_WORKER_PORT_RANGE=9000:9100
DASK_TEMPORARY_DIRECTORY=/tmp/dask-worker-space

# Ray
RAY_NUM_CPUS=4
RAY_NUM_GPUS=0
RAY_OBJECT_STORE_MEMORY=4000000000
RAY_DASHBOARD_HOST=0.0.0.0
RAY_DASHBOARD_PORT=8265
RAY_HEAD_HOST=ray-head
RAY_HEAD_PORT=6379
RAY_HEAD_ADDRESS=${RAY_HEAD_HOST}:${RAY_HEAD_PORT}
# Prometheus and Grafana Integration
# RAY_PROMETHEUS_PORT=9090
# RAY_PROMETHEUS_METRICS_PORT=9090
# RAY_PROMETHEUS_HOST=http://localhost:${RAY_PROMETHEUS_PORT}
# RAY_GRAFANA_PORT=3000
# RAY_GRAFANA_HOST=http://localhost:${RAY_GRAFANA_PORT}
# GF_SECURITY_ALLOW_EMBEDDING=true
# GF_AUTH_ANONYMOUS_ENABLED=true